kturtle-script-v1.0
#Learning project "Clock" with KTurtle

#KTurtle is an educational programming environment for turtle graphics. KTurtle has a built-in programming language that is loosely based on the Logo programming language. It includes some basic elements, like variables, loops, ifs, includes some functions like sin or mod, and commands to control the turtle. It does not support arrays. The KTurtle language and IDE are limited to teaching programming using turtle graphics, and is not intended for other applications. 

#===================================
#Learning  animation, loops, nested loops, subroutines, unorthodox approach
#===================================

# clock_studio_style.turtle
# v. 1.0 

# First keypoint is animation. Repeated canvas clearing and drawing a new shapes makes an illusion of animated object.

#Main keypoint is nested loops (hours, minutes, seconds)

#Another keypoint is using of subroutines. Use subroutines for universal tasks or just to improve readability.

#This version "Studio style" difference from "Second hand" in complicity and smoothness. This version implements hour and minute hands, seconds are counted like on studio clock - just adding marks on outer border of clockface. Clock face need to be renewed once per minute and not every second, like in "Second hand". This version looks better and runs smoother even on slow machines.

# "POLJOT" is a brand of Soviet/Russian wristwatches, produced since 1964 by the First Moscow Watch Factory. My mom worked there for decades. Poljot produced numerous historical watches, including the world's first space watch worn by Yuri Gagarin.


@(reset)

@(canvassize) 300@(,)300

@(spritehide)

@(penup)

$StartH=10
$StartM=10

@(learn) DrawLine $Direction@(,) $Start@(,) $Length@(,) $Width@(,) $R@(,)$G@(,)$B { #Subroutine draws a line with given parameters from canvas center. Variable names are self explaining.
  @(center)
  @(direction) $Direction
  @(forward) $Start
  @(penwidth) $Width
  @(pencolor) $R@(,)$G@(,)$B
  @(pendown)
  @(forward) $Length
  @(penup)
}

@(learn) MakeClockFace {

  @(for) $A=-90 @(to) 180 @(step) 90 {

    machstrich $A@(,)    100@(,) 25@(,) 4@(,) 140@(,)140@(,)140

    @(for) $B=$A+6 @(to) $A+24 @(step) 6 {
      machstrich $B@(,)  104@(,) 12@(,) 1@(,) 160@(,)160@(,)160
    }
    machstrich $A+30@(,) 100@(,) 25@(,) 2@(,) 160@(,)160@(,)160

    @(for) $B=$A+36 @(to) $A+54 @(step) 6 {
      machstrich $B@(,)  104@(,) 12@(,) 1@(,) 160@(,)160@(,)160
    }
    machstrich $A+60@(,) 100@(,) 25@(,) 2@(,) 160@(,)160@(,)160

    @(for) $B=$A+66 @(to) $A+84 @(step) 6 {
      machstrich $B@(,)  104@(,) 12@(,) 1@(,) 160@(,)160@(,)160
    }

  }

  #Uhrenmarke
  @(go) 123@(,)180
  @(direction) 0
  @(pencolor) 20@(,)20@(,)20
  @(print) "POLJOT"
}

@(while) @(true) {

  #Stundenschleife
  @(for) $Hour=$StartH @(to) 11 {

    #Minutenschleife
    @(for) $Min=$StartM @(to) 59 {
      
      @(clear)
      machZiffernblatt

      #Stundenzeiger
      machstrich $Hour*30+$Min/2@(,) -5@(,) 70@(,) 8@(,) 140@(,)140@(,)140

      #Minutenzeiger
      machstrich $Min*6@(,) -10@(,) 110@(,) 4@(,) 90@(,)90@(,)90

      #Sekundnzeiger und Secundenschleife
      @(for) $Sec=0 @(to) 59 {
        machstrich $Sec*6@(,) 104@(,) 12@(,) 1.5@(,) 255@(,) 0@(,) 0
        @(wait) 1
      }
    }
    $StartM = 0
  }
  $StartH = 0
}